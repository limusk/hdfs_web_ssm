<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
   http://www.springframework.org/schema/beans/spring-beans.xsd
   http://www.springframework.org/schema/context
   http://www.springframework.org/schema/context/spring-context.xsd
   http://www.springframework.org/schema/aop
   http://www.springframework.org/schema/aop/spring-aop.xsd
   http://www.springframework.org/schema/tx
   http://www.springframework.org/schema/tx/spring-tx.xsd">

    <!-- 开启注解扫描，处理service和dao，但是不需要处理 controller -->
    <context:component-scan base-package="cn.mumu">
        <!-- 配置哪些注解不扫描 -->
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>

    <!--此配置直接可以将AutowiredAnnotationBeanPostProcessor，CommonAnnotationBeanPostProcessor，
    PersistenceAnnotationBeanPostProcessor，RequiredAnnotationBeanPostProcessor一次性配置结束。-->
    <context:annotation-config />

    <!-- 将数据库配置文件添加进来-->
    <context:property-placeholder location="classpath:jbdc.properties" />
    <!--  Spring整合MyBatis框架-->
    <!--    配置连接池-->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
        <property name="driverClassName" value="com.mysql.jdbc.Driver"/>
        <property name="username" value="root"/>
        <property name="password" value="admin"/>
        <property name="url" value="jdbc:mysql://localhost:3306/hdfs"/>
    </bean>

    <!--    配置sqlSessionFactory工厂-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
<!--        注入数据库连接池-->
        <property name="dataSource" ref="dataSource"/>
        <property name="configLocation" value="classpath:mybatis.xml" />
    </bean>


    <!--    配置接口所在包-->
    <bean id="mapperScanner" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="cn.mumu.*.dao"/>
<!--        注入sqlSessionFactory-->
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
    </bean>

    <!--    配置spring框架声明式事务管理-->
    <!--    配置事务管理器-->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>
    <!--    配置事务通知-->
    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <tx:method name="query*" read-only="true"/>
            <tx:method name="*" isolation="DEFAULT"/>
        </tx:attributes>
    </tx:advice>
    <!--    配置AOP增加-->
    <aop:config>
        <aop:advisor advice-ref="txAdvice" pointcut="execution(* cn.mumu.ssh.service.impl..*ServiceImpl.*(..))"/>
    </aop:config>

    <bean id="hadoopUtils" class="cn.mumu.ssh.util.HadoopUtils" init-method="initFs" />
</beans>

